PASOS PARA EL PROYECTO DE GIT.


ðŸ‘‰ 1. Creo un repositorio local:

ðŸ§© Creo una carpeta con el nombre del repositorio: $ mkdir lemoncodeGit

ðŸ§© Entro en el repositorio: $ cd lemoncodeGit

ðŸ§© inicializo git con: $ git init


ðŸ‘‰ 2. Creo un repositorio en mi cuenta de GitHub:

ðŸ§© Creo un repositorio en GitHub y copio mi clave ssh.
    (el repositorio es privado y no incluye readme.md ni .gitignore).

ðŸ§© En la terminal de git GitBash de VS Code conecto mi repositorio remoto:
    $ git remote add origin git@github.com:usuario/nombre-repositorio.git

ðŸ§© Confirmo que se estableciÃ³ bien la conexiÃ³n con: git remote -v
    $ git remote -v
    origin  git@github.com:usuario/nombre-repositorio.git (fetch)
    origin  git@github.com:usuario/nombre-repositorio.git (push)


ðŸ‘‰ 3. Hacer un commit y un push:

ðŸ§© Creo un archivo en mi repositorio local con: $ touch primerArchivo.txt

ðŸ§© Verifico con: âšª $ ls âšª que en mi repositorio se encuentra el archivo creado.

ðŸ§© AÃ±ado el archivo al staging con: git add primerArchivo.txt

ðŸ§© Utilizo: âšª $ git status âšª para verificar que se encuentra en el Ã¡rea de staging:
    $ git status
    On branch master

    No commits yet

    Changes to be committed:
      (use "git rm --cached <file>..." to unstage)
            new file:   primerArchivo.txt

ðŸ§© Realizo un commit: git commit: âšª $ git commit -m "Primer commit: de primerArchivo.txt" âšª

ðŸ§© Verifico que el commit se haya realizado con Ã©xito:
    $ git status
    On branch master
    nothing to commit, working tree clean

ðŸ§© Subo los cambios realizados en mi repositorio local a GitHub: git push -u origin master

ðŸ§© Compruebo que se ha subido al repositorio remoto desde la terminal de Git Bash:
    âšª $ git log origin/master
    commit 48593h4958g4857j573j47384j5748f5748f84k (HEAD -> master, origin/master)
    Author: usuario <tu-email@gmail.com>
    Date:   Thu Oct 10 10:00:14 2025 +0200


ðŸ‘‰ 4. Creo una rama en mi repositorio local: 

ðŸ§© Creo una rama con: âšª $git switch -c development
    $ git switch -c development
    Switched to a new branch 'development'

ðŸ§© Verifico que la rama ha sido creada:
    $ git branch
    * development
      master

ðŸ§© Cambiarme a la rama "development":
    Como ya he cambiado a la nueva rama utilizando $ git switch
    no hace falta utilizar âšª $ git checkout development